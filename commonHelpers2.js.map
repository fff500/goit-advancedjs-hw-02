{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\nlet selectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        color: 'red',\n      });\n      return;\n    }\n\n    startBtn.removeAttribute('disabled');\n    selectedDate = selectedDates[0];\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.setAttribute('disabled', true);\nstartBtn.addEventListener('click', startCountdown);\n\nfunction startCountdown() {\n  const intervalId = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(\n      selectedDate - Date.now()\n    );\n    daysSpan.textContent = addLeadingZero(days);\n    hoursSpan.textContent = addLeadingZero(hours);\n    minutesSpan.textContent = addLeadingZero(minutes);\n    secondsSpan.textContent = addLeadingZero(seconds);\n\n    if (selectedDate - Date.now() <= 0) {\n      clearInterval(intervalId);\n      daysSpan.textContent = '00';\n      hoursSpan.textContent = '00';\n      minutesSpan.textContent = '00';\n      secondsSpan.textContent = '00';\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return `${value}`.length < 2 ? `0${value}` : `${value}`;\n}\n"],"names":["startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","selectedDate","options","selectedDates","iziToast","flatpickr","startCountdown","intervalId","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3D,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,IAAM,KAAK,IAAG,EAAI,CAClCC,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,KACf,CAAO,EACD,MACD,CAEDR,EAAS,gBAAgB,UAAU,EACnCK,EAAeE,EAAc,EAC9B,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAErCN,EAAS,aAAa,WAAY,EAAI,EACtCA,EAAS,iBAAiB,QAASU,CAAc,EAEjD,SAASA,GAAiB,CACxB,MAAMC,EAAa,YAAY,IAAM,CACnC,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EACxCX,EAAe,KAAK,IAAK,CAC/B,EACIJ,EAAS,YAAcgB,EAAeL,CAAI,EAC1CV,EAAU,YAAce,EAAeJ,CAAK,EAC5CV,EAAY,YAAcc,EAAeH,CAAO,EAChDV,EAAY,YAAca,EAAeF,CAAO,EAE5CV,EAAe,KAAK,IAAG,GAAM,IAC/B,cAAcM,CAAU,EACxBV,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE7B,EAAE,GAAI,CACT,CAEA,SAASY,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,MAAO,GAAGA,IAAQ,OAAS,EAAI,IAAIA,IAAU,GAAGA,GAClD"}